[tool.poetry]
name = "stt-tg-bot"
version = "0.1.0"
description = "Speech-to-Text Telegram Bot using Groq Whisper API"
authors = ["User <user@example.com>"]
readme = "README.md"
packages = [{ include = "stt_tg_bot" }]

[tool.poetry.dependencies]
python = "^3.11"
aiogram = "^3.13.1"
groq = "^0.11.0"
fastapi = "^0.115.0"
uvicorn = "^0.31.0"
python-multipart = "^0.0.9"
aiofiles = "^24.1.0"
pydantic-settings = "^2.6.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-cov = "^5.0.0"
ruff = "^0.6.9"
mypy = "^1.11.2"
bandit = "^1.7.10"
pip-audit = "^2.7.3"
pre-commit = "^3.8.0"
httpx = "^0.27.2"
types-aiofiles = "^24.1.0.20250822"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = ["E501", "B008", "W191", "B904"]  # Добавили B904 для исключений

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=stt_tg_bot --cov-report=term-missing"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]
